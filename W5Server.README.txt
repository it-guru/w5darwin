Generell handling, debuging, configuring and using of the W5Server
==================================================================

The W5Server is essentialy needed to process all asyncron and atomic
operation. The communication from the apache spare process and the
W5ServerClient commandline tool will be done over TCP. 

Security
========
The W5Server can invoke potentially security relevant jobs/events. This
fact needs to protect the W5Server to get connections from other hosts
besides the needed. This can be done by using the configuration option
"W5ServerAllow".

Signal handling
===============

soft restart
------------
To reload every module code, you have to send a USR1 signal to
the main W5Server process. A soft restart takes up to 15 seconds
and have in this time a very short listener interupt. Running
events have time, to do a "clean" finish.

soft shutdown
-------------
The W5Server main process supports "soft shutdown". To initiate a 
soft shutdown, you have to send a USR2 signal to the main process.
In this case, all running events will also get this signal and this
results in a ServerGoesDown=true flag. The running events should
check this flag circular and if it is true, they can do a "clean"
finish. A "soft shutdown" takes up to 15 seconds! If a event 
didn't finished in this time, it will be "hard" killed.

hard shutdown
-------------
If you send a INT to the main W5Server, all running events an W5Server
process servers will be also killed by a INT signal. This kind of 
shutdown should be avoided!

hard restart
------------
If you send a HUP signal to the main W5Server, a restart of the W5Server
will be initiated. This kind of restart should be avoided and is NOT
supported by the developer! Some strange effects can be created by
this operation.

ERROR messages
==============
If there are problems with events, the W5Server can not be sure,
to can mail handling by the internal W5Base-Workflow system. For
that reason, he needs to do sending of mails nativ by the sendmail
command of the operation system.
The sendmail command will be searched at the directories ...
 /usr/local/sbin:/sbin:/usr/sbin:/usr/lib:/usr/lib/sbin
The admin of the OS must be ensure, to find a useable sendmail
in one of this directories. In other way, the W5Server 
can not inform about havy event errors!

The destination for the error messages will be calculated
by three steps:
a) If there is a W5SERVERSERVICE in the config, this
   will be the "To" parameter for sending mails.
b) If no W5SERVERSERVICE specified and W5SERVERUSER
   is set, the W5SERVERUSER user will be the target
   for the error mails.
c) If case a) and b) fails, the "root" will be the
   target for the error mails.


Act as secondary W5Server (experimental)
========================================
If there are the config options ...

 W5PrimaryServerHost
 W5PrimaryServerPort

... are set, the W5Server will try to connect at startup to 
the master (primary) W5Server. This configuration can be needed to
scale the process capability to handle a huge count of events on
multiple logical servers.


Commands
========
sbin/W5Server       =  The W5Server program

sbin/W5ServerClient =  Commandline interface to initiate operations in
                       the process space of the W5Server

sbin/W5Event        =  Debugging tool, to run events in the 
                       process space of calling user

                     
