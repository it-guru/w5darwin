# Schablone:
# ==========
#CREATE TABLE "object" (
#   ID             NUMBER(22,0) not null,
#   ...            VARCHAR2(80),
#   MDATE          DATE,
#   W5REPLKEY      CHAR(70) not null,
#   W5REPLKEYPRI   CHAR(35) not null,
#   W5REPLKEYSEC   CHAR(35),
#   W5REPLLASTSUCC DATE     not null,
#   W5REPLLASTTRY  DATE     not null,
#   W5REPLMDATE    DATE     not null,
#   W5REPLFAILCNT  NUMBER(22,0) default 0 not null,
#   constraint "object_pk" primary key (ID)
#);
#CREATE INDEX "object_si1" ON "base::user"(W5REPLKEY);
#CREATE INDEX "object_si2" ON "base::user"(W5REPLLASTSUCC);
#
#
#-------------------------------------------------------------------------
#Sample replication table for object "base::user":
#=================================================
#
CREATE TABLE "base::user" (
   USERID         NUMBER(*,0) not null,
   FULLNAME       VARCHAR2(128),
   CISTATUSID     NUMBER(1,0),
   EMAIL          VARCHAR2(128),
   SURNAME        VARCHAR2(30),
   LANG           VARCHAR2(10),
   GIVENNAME      VARCHAR2(30),
   OFFICE_PHONE   VARCHAR2(80),
   OFFICE_MOBILE  VARCHAR2(80),
   POSIX          VARCHAR2(8),
   MDATE          DATE,
   W5REPLKEY      CHAR(70) not null,
   W5REPLKEYPRI   CHAR(35) not null,
   W5REPLKEYSEC   CHAR(35),
   W5REPLLASTSUCC DATE     not null,
   W5REPLLASTTRY  DATE     not null,
   W5REPLMDATE    DATE     not null,
   W5REPLCDATE    DATE     not null,
   W5REPLFAILCNT  NUMBER(22,0) default 0 not null,
   constraint "base::user_pk" primary key (USERID)
);
CREATE INDEX "base::user_si1" ON "base::user"(W5REPLKEY);
CREATE INDEX "base::user_si2" ON "base::user"(W5REPLLASTSUCC);
CREATE INDEX "base::user_di1" ON "base::user"(EMAIL);
CREATE INDEX "base::user_di2" ON "base::user"(POSIX);
CREATE INDEX "base::user_di3" ON "base::user"(FULLNAME);
#-------------------------------------------------------------------------
#Sample replication table for object "base::grp":
#=================================================
#
CREATE TABLE "base::grp" (
   GRPID          NUMBER(*,0) not null,
   FULLNAME       VARCHAR2(128),
   CISTATUSID     NUMBER(1,0),
   MDATE          DATE,
   W5REPLKEY      CHAR(70) not null,
   W5REPLKEYPRI   CHAR(35) not null,
   W5REPLKEYSEC   CHAR(35),
   W5REPLLASTSUCC DATE     not null,
   W5REPLLASTTRY  DATE     not null,
   W5REPLMDATE    DATE     not null,
   W5REPLCDATE    DATE     not null,
   W5REPLFAILCNT  NUMBER(22,0) default 0 not null,
   constraint "base::grp_pk" primary key (GRPID)
);
CREATE INDEX "base::grp_si1" ON "base::grp"(W5REPLKEY);
CREATE INDEX "base::grp_si2" ON "base::grp"(W5REPLLASTSUCC);
CREATE INDEX "base::grp_di1" ON "base::grp"(FULLNAME);
#-------------------------------------------------------------------------
#Sample replication table for object "tsacinv::system":
#======================================================
#
CREATE TABLE "tsacinv::system" (
   SYSTEMID       VARCHAR2(20) not null,
   SYSTEMNAME     VARCHAR2(40),
   CONUMBER       VARCHAR2(40),
   USAGE          VARCHAR2(40),
   MDATE          DATE,
   W5REPLKEY      CHAR(70) not null,
   W5REPLKEYPRI   CHAR(35) not null,
   W5REPLKEYSEC   CHAR(35),
   W5REPLLASTSUCC DATE     not null,
   W5REPLLASTTRY  DATE     not null,
   W5REPLMDATE    DATE     not null,
   W5REPLCDATE    DATE     not null,
   W5REPLFAILCNT  NUMBER(22,0) default 0 not null,
   constraint "tsacinv::system_pk" primary key (SYSTEMID)
);
CREATE INDEX "tsacinv::system_si1" ON "tsacinv::system"(W5REPLSYNC);
CREATE INDEX "tsacinv::system_si2" ON "tsacinv::system"(W5REPLLASTSUCC);
CREATE INDEX "tsacinv::system_di1" ON "tsacinv::system"(SYSTEMNAME);
#-------------------------------------------------------------------------
# Sample replication table for object "TS::interview":
# ======================================================
create table "TS::interview" (
 id                   Number(22,0) not null,
 interviewcatid       Number(22,0),
 name_en              VARCHAR2(40),
 name_de              VARCHAR2(40),
 cistatusid           VARCHAR2(40),
 contactid            VARCHAR2(40),
 contact2id           VARCHAR2(40),
 qtag                 VARCHAR2(40),
 parentobj            VARCHAR2(40),
 queryblock           VARCHAR2(40),
 questclust           VARCHAR2(40),
 prio                 VARCHAR2(40),
 questtyp             VARCHAR2(40),
 comments             VARCHAR2(40),
 restriction          VARCHAR2(40),
 mdate                DATE,
 questcluster         VARCHAR2(40),
 effect_on_mttr       Number(1,0),
 effect_on_mtbf       Number(1,0),
 W5REPLKEY            CHAR(70) not null,
 W5REPLKEYPRI         CHAR(35) not null,
 W5REPLKEYSEC         CHAR(35) not null,
 W5REPLLASTSUCC       DATE not null,
 W5REPLLASTTRY        DATE not null,
 W5REPLMDATE          DATE not null,
 W5REPLCDATE          DATE not null,
 W5REPLFAILCNT        NUMBER(22,0) default 0 not null,
 constraint "TS::interview_pk" primary key (id)
);
CREATE INDEX "TS::interview_si1"
       ON "TS::interview"(W5REPLKEY);
CREATE INDEX "TS::interview_si2"
       ON "TS::interview"(W5REPLLASTSUCC);


#-------------------------------------------------------------------------
# Sample replication table for object "itil::software":
# ======================================================
create table "itil::software" (
 id                   Number(22,0) not null,
 name                 VARCHAR2(128),
 cistatusid           VARCHAR2(40),
 producerid           VARCHAR2(40),
 compcontactid        VARCHAR2(40),
 depcompcontactid     VARCHAR2(40),
 releaseexp           VARCHAR2(128),
 comments             VARCHAR2(40),
 mdate                DATE,
 W5REPLKEY            CHAR(70) not null,
 W5REPLKEYPRI         CHAR(35) not null,
 W5REPLKEYSEC         CHAR(35) not null,
 W5REPLLASTSUCC       DATE not null,
 W5REPLLASTTRY        DATE not null,
 W5REPLMDATE          DATE not null,
 W5REPLCDATE          DATE not null,
 W5REPLFAILCNT        NUMBER(22,0) default 0 not null,
 constraint "itil::software_pk" primary key (id)
);
CREATE INDEX "itil::software_si1"
       ON "itil::software"(W5REPLKEY);
CREATE INDEX "itil::software_si2"
       ON "itil::software"(W5REPLLASTSUCC);
CREATE INDEX "itil::software_di1"
       ON "itil::software"(NAME);

#
#-------------------------------------------------------------------------
#

# TSI_HCO Zugriff auf die Interviewdaten

create or replace view ":TSI_HCO:interview" as
   select "TS::interview".id,
          "TS::interview".qtag,
          "TS::interview".name_en,
          "TS::interview".name_de,
          "TS::interview".cistatusid,
          "contact".fullname   contact_fullname,
          "contact2".fullname  contact2_fullname,
          "TS::interview".mdate
   from "TS::interview"
        left outer join "base::user" "contact"
             on "TS::interview".contactid="contact".userid
        left outer join "base::user" "contact2"
             on "TS::interview".contact2id="contact2".userid;
create synonym TSI_HCO.w5base_interview for W5BASE.":TSI_HCO:interview";


# Bei der Replikation können nur Objekte Repliziert werden, die
# IDs besitzen. Für die Relationstable "itil::lnkapplsystem" muss
# man also eine View hinzufügen:

create or replace view "_ACT_itil::lnkapplsystem" as
select "itil::appl".id applid,
       "itil::appl".name applname,
       "itil::system".id systemid,
       "itil::system".name systemname
from   "itil::appl","itil::lnkapplsystem","itil::system" 
where "itil::appl".id="itil::lnkapplsystem".applid 
   and "itil::lnkapplsystem".systemid="itil::system".id
   and "itil::appl".cistatusid=4
   and "itil::system".cistatusid=4
   /* In dieser View werden alle relevanten, installiert/aktiv
      markierten Anwendungs-System Relationen vorgehalten. 
      In einem zweiten Schritt werden hier auch die Cluster Relationen
      zu finden sein. */
;

# Alle "zwischen" Views zur Darstellung von Datenzuständen müssen mit _
# beginnen. Dies stellt sicher, dass keine Namens-Kolistionen zu W5Base Objekten
# entstehene können (Module fangen in W5Base NIE mit _ an)

# Der alte Text einer View ist mit ...
# select text from user_views
# ... wieder abrufbar (incl. comments in der o.g. Schreibweise)

